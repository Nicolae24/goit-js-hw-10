// –û–ø–∏—Å–∞–Ω–∏–π –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó
import flatpickr from "flatpickr";
// –î–æ–¥–∞—Ç–∫–æ–≤–∏–π —ñ–º–ø–æ—Ä—Ç —Å—Ç–∏–ª—ñ–≤
import "flatpickr/dist/flatpickr.min.css";

// –û–ø–∏—Å–∞–Ω–∏–π —É –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó
import iziToast from "izitoast";
// –î–æ–¥–∞—Ç–∫–æ–≤–∏–π —ñ–º–ø–æ—Ä—Ç —Å—Ç–∏–ª—ñ–≤
import "izitoast/dist/css/iziToast.min.css";

const dataPicker = document.querySelector(`#datetime-picker`);
const startBtn = document.querySelector(`[data-start]`);

startBtn.disabled = true;

let userSelectDate = null;


flatpickr(dataPicker, {
    enableTime: true,
    time_24hr: true,
    defaultDate: new Date(),
    minuteIncrement: 1,
    onClose(selectedDates) {
        const pickedDate = selectedDates[0];

        if (pickedDate <= new Date()) {
            // ‚ùå –ú–∏–Ω—É–ª–µ
            iziToast.error({
                title: "Error",
                message: "Please choose a date in the future",
            });
            startBtn.disabled = true;
        } else {
            // ‚úÖ –ú–∞–π–±—É—Ç–Ω—î 
            userSelectDate = pickedDate;
            startBtn.disabled = false;
            iziToast.info({
                title: '–û–æ, –ø—ñ—à–ª–æ',
                message: '–ì–∞–ª—è –±–µ—Ä–µ–≥–∞ –Ω–∞ –≤–∏–¥–∏—Ç!',
            });
        }
    },
});

startBtn.addEventListener(`click`, () => {
    startBtn.disabled = true;
    dataPicker.disabled = true;
    const timerId = setInterval(() => {
        const now = new Date();
        const timeLeft = userSelectDate - now;
        if (timeLeft <= 0) {
            clearInterval(timerId);
            updateTimerDis(0);
            dataPicker.disabled = false;
            document.querySelector('.timer').classList.add('blink'); // üí´ –î–æ–¥–∞—Ç–∏ –∞–Ω—ñ–º–∞—Ü—ñ—é
            showFlashAnimation();

            return;
        }
        updateTimerDis(timeLeft);
    }, 1000);

})

function convertMs(ms) {
    // Number of milliseconds per unit of time
    const second = 1000;
    const minute = second * 60;
    const hour = minute * 60;
    const day = hour * 24;

    // Remaining days
    const days = Math.floor(ms / day);
    // Remaining hours
    const hours = Math.floor((ms % day) / hour);
    // Remaining minutes
    const minutes = Math.floor(((ms % day) % hour) / minute);
    // Remaining seconds
    const seconds = Math.floor((((ms % day) % hour) % minute) / second);

    return { days, hours, minutes, seconds };
}

function addZero(value) {
    return String(value).padStart(2, "0");
}

const daysEl = document.querySelector('[data-days]');
const hoursEl = document.querySelector('[data-hours]');
const minutesEl = document.querySelector('[data-minutes]');
const secondsEl = document.querySelector('[data-seconds]');

function updateTimerDis(ms) {
    const { days, hours, minutes, seconds } = convertMs(ms);

    daysEl.textContent = addZero(days);
    hoursEl.textContent = addZero(hours);
    minutesEl.textContent = addZero(minutes);
    secondsEl.textContent = addZero(seconds);
}

function showFlashAnimation() {
    document.body.classList.add('flash');
    setTimeout(() => {
        document.body.classList.remove('flash');
    }, 600); // –ø—ñ—Å–ª—è 3 —Ä–∞–∑—ñ–≤
}

